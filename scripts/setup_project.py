# –°–û–ó–î–ê–ù–ò–ï: scripts/setup_project.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
"""
import os
import subprocess
import sys
from pathlib import Path


def setup_project():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"""

    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Crypto AI Trading Bot...")

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    directories = [
        "logs",
        "data/historical",
        "backtest_results",
        "secrets",
        "web/static",
        "web/templates"
    ]

    for dir_path in directories:
        Path(dir_path).mkdir(parents=True, exist_ok=True)
        print(f"üìÅ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    if not os.path.exists(".env"):
        if os.path.exists(".env.example"):
            import shutil
            shutil.copy(".env.example", ".env")
            print("üìÑ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ .env.example")
            print("‚ö†Ô∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏!")
        else:
            print("‚ùå –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    result = subprocess.run([
        sys.executable, "-m", "pip", "install", "-r", "requirements.txt"
    ])

    if result.returncode == 0:
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
        return False

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    print("\nüóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    try:
        from data.storage.database import DatabaseManager
        db = DatabaseManager()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ë–î: {e}")

    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞ —Å –¥–∞—à–±–æ—Ä–¥–æ–º
    dashboard_path = "web/templates/dashboard.html"
    if not os.path.exists(dashboard_path):
        print(f"‚ö†Ô∏è –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª {dashboard_path} –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –¥–∞—à–±–æ—Ä–¥ HTML'")

    print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º–∏ API –∫–ª—é—á–∞–º–∏")
    print("2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ–∞–π–ª—ã –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ Claude")
    print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: python scripts/run_tests.py")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞: python main.py --mode bot")
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ API: python main.py --mode api")
    print("6. –û—Ç–∫—Ä–æ–π—Ç–µ –¥–∞—à–±–æ—Ä–¥: http://localhost:8000")


if __name__ == "__main__":
    setup_project()